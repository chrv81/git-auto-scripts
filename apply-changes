#!/bin/bash

# Function to display ASCII art
print_art() {
  echo -e "\n"
  echo -e "▄▖    ▜    ▄▖▘▗  ▄▖▌           "
  echo -e "▌▌▛▌▛▌▐ ▌▌ ▌ ▌▜▘ ▌ ▛▌▀▌▛▌▛▌█▌▛▘"
  echo -e "▛▌▙▌▙▌▐▖▙▌ ▙▌▌▐▖ ▙▖▌▌█▌▌▌▙▌▙▖▄▌"
  echo -e "  ▌ ▌   ▄▌               ▄▌    "
  echo -e "\n"
  echo -e "========================="
  echo -e "\n"
}

# Define color codes
RED='\033[0;31m'
GREEN='\033[0;32m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

while true; do
  # Print ASCII art at the start of the program
  print_art

  # Step 1: Ask for user inputs
  echo -e "${CYAN}Enter the tag name or branch name:${NC}"
  read tag_or_branch

  # Enable path autocompletion for file or folder path input
  echo -e "\n${CYAN}Enter the file or folder path:${NC}"
  read -e file_path

  echo -e "\n${CYAN}Enter the time range (e.g., '2 weeks ago', '3 days ago', '1 month ago'):${NC}"
  read time_range

  # Step 2: Run git log to get unique author names
  echo -e "\n${YELLOW}Fetching author names...${NC}"
  authors=$(git log "$tag_or_branch" --since="$time_range" -- "$file_path" | grep "^Author:" | sed 's/^Author: //' | sort | uniq)
  echo -e "${GREEN}Authors who made changes in the specified range:${NC}"
  echo "$authors"

  # Step 3: Ask user to specify authors to filter
  echo -e "\n${CYAN}Enter the author names you want to filter by (separate multiple names with '|'):${NC}"
  read author_filter

  # Step 4: Run git log with the filtered authors

  # Step 5: Ask user if they want to apply changes automatically or manually

  # Step 6: Ask if the user wants to run the program again
  echo -e "\n${CYAN}Do you want to run the program again? (yes/no):${NC}"
  read continue_program
  
  if [ "$continue_program" != "yes" ]; then
    echo -e "${GREEN}Exiting program. Goodbye!${NC}"
    break
  fi
done
